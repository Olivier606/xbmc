# Kodi's travis-ci.org integration file

# TODO:
# integrate with slack
# make it perfect... or not ;-r


#language: cpp

# Define the build matrix
#
# Travis defaults to building on Ubuntu Precise when building on Linux. We need Trusty in order to get up
# to date versions of cmake and g++.
#
#os: linux
#dist: trusty
#sudo: required

language: cpp

compiler:
  - gcc
  - clang

before_script:
  - mkdir build
  - cd build
#  - cmake -DENABLE_INTERNAL_CROSSGUID=ON
#  - cmake -DENABLE_INTERNAL_FMT=ON
#  - cmake -DENABLE_INTERNAL_RapidJSON=ON
  - cmake ..
  - cmake --build 
 
before_install:
 #- sudo apt-get install -qq
 - export PATH=$(echo $PATH | tr ':' "\n" | sed '/\/opt\/python/d' | tr "\n" ":" | sed "s|::|:|g")
  
install:
# - sudo apt-get intall -y gawk gdb gdc gettext git-core gperf libasound2-dev libass-dev libbz2-dev libcap-dev libcdio-dev libcec4-dev libcrossguid-dev libcurl3 libcurl4-openssl-dev libdbus-1-dev libfmt3-dev libfontconfig-dev libegl1-mesa-dev libfreetype6-dev libfribidi-dev libgif-dev libiso9660-dev libjpeg-dev liblcms2-dev libltdl-dev liblzo2-dev libmicrohttpd-dev libmysqlclient-dev libnfs-dev libpcre3-dev libplist-dev libpng-dev libpulse-dev libsmbclient-dev libsqlite3-dev libssh-dev libssl-dev libtag1-dev libtinyxml-dev libtool libudev-dev libusb-dev libva-dev libvdpau-dev libxml2-dev libxmu-dev libxrandr-dev libxrender-dev libxslt1-dev libxt-dev libyajl-dev mesa-utils nasm pmount python-dev python-imaging python-sqlite rapidjson-dev swig unzip uuid-dev yasm zip zlib1g-dev
 - sudo apt-get install -y gettext
 - sudo apt-get install -y git-core
 - sudo apt-get install -y gperf
 - sudo apt-get install -y automake
 - sudo apt-get install -y autopoint
 - sudo apt-get install -y build-essential
 - sudo apt-get install -y cmake
 - sudo apt-get install -y curl
 - sudo apt-get install -y default-jre
 - sudo apt-get install -y gawk
 - sudo apt-get install -y gdb
 - sudo apt-get install -y gdc
 - sudo apt-get install -y liblzo2-dev
 - sudo apt-get install -y libgif-dev
 - sudo apt-get install -y libiso9660-dev
 - sudo apt-get install -y libcdio-dev
 - sudo apt-get install -y libfribidi-dev
 - sudo apt-get install -y libtag1-dev
 - sudo apt-get install -y libtinyxml-dev
 - sudo apt-get install -y libegl1-mesa-dev
 - sudo apt-get install -y libxrandr-dev
 - sudo apt-get install -y libvdpau-dev
 - sudo apt-get install -y libass-dev
 - sudo apt-get install -y libasound2-dev
 - sudo apt-get install -y libbz2-dev
 - sudo apt-get install -y libcap-dev
 #- sudo apt-get install -y libcec-dev
 - sudo apt-get install -y cec-utils
 #- sudo apt-get install -y crossguid
 - sudo apt-get install -y libcurl3
 - sudo apt-get install -y libcurl4-openssl-dev
 - sudo apt-get install -y libdbus-1-dev
 #- sudo apt-get install -y libfmt3-dev
 - sudo apt-get install -y libfontconfig-dev
 - sudo apt-get install -y libegl1-mesa-dev
 - sudo apt-get install -y libfreetype6-dev
 - sudo apt-get install -y libjpeg-dev
 - sudo apt-get install -y liblcms2-dev
 - sudo apt-get install -y libltdl-dev
 - sudo apt-get install -y libmicrohttpd-dev
 - sudo apt-get install -y libmysqlclient-dev
 - sudo apt-get install -y libnfs-dev
 - sudo apt-get install -y libpcre3-dev
 - sudo apt-get install -y libplist-dev
 - sudo apt-get install -y libpng-dev
 - sudo apt-get install -y libpulse-dev
 - sudo apt-get install -y libsmbclient-dev
 - sudo apt-get install -y libsqlite3-dev
 - sudo apt-get install -y libssh-dev
 - sudo apt-get install -y libssl-dev
 - sudo apt-get install -y libtag1-dev
 - sudo apt-get install -y libtool
 - sudo apt-get install -y libudev-dev
 - sudo apt-get install -y libusb-dev
 - sudo apt-get install -y libva-dev
 - sudo apt-get install -y libxml2-dev
 - sudo apt-get install -y libxmu-dev
 - sudo apt-get install -y libxrender-dev
 - sudo apt-get install -y libxslt1-dev
 - sudo apt-get install -y libxt-dev
 - sudo apt-get install -y libyajl-dev
 - sudo apt-get install -y mesa-utils
 - sudo apt-get install -y nasm
 - sudo apt-get install -y pmount
 - sudo apt-get install -y python-dev
 - sudo apt-get install -y python-imaging
 - sudo apt-get install -y python-sqlite
 - sudo apt-get install -y swig
 - sudo apt-get install -y unzip
 - sudo apt-get install -y uuid-dev
 - sudo apt-get install -y yasm
 - sudo apt-get install -y zip
 - sudo apt-get install -y zlib1g-dev
 - sudo apt-get install -y rapidjson-dev
#  sudo apt-get install -qq 

script: make && make test

#env:
#  - BUILD=Kodi TOOLS=CMake
#  - ADDONS=adsp
#  - ADDONS=audiodecoder
#  - ADDONS=audioencoder
#  - ADDONS=pvr
#  - ADDONS=screensaver
#  - ADDONS=visualization

#matrix:
#  fast_finish: true
#  allow_failures:
#    - env: ADDONS=adsp
#    - env: ADDONS=audiodecoder
#    - env: ADDONS=audioencoder
#    - env: ADDONS=pvr
#    - env: ADDONS=screensaver
#    - env: ADDONS=visualization

# Prepare system
#
# Prepare the system to install prerequisites or dependencies
#
#before_install:
# Prune non-root Python from PATH. Solves https://github.com/travis-ci/travis-ci/issues/4948
# see: https://github.com/travis-ci/travis-ci/issues/5326
#  - export PATH=$(echo $PATH | tr ':' "\n" | sed '/\/opt\/python/d' | tr "\n" ":" | sed "s|::|:|g")

# Linux
#
# Install team-xbmc/xbmc-ppa-build-depends for some dependencies and ppa:wsnipex/vaapi for libda-dev 1.6.0.
# Stupid libda-dev 1.3.0 does not work on Trusty.

#  - if [[ "$TRAVIS_OS_NAME" == "linux" && "$BUILD" == "Kodi" ]]; then
#      sudo add-apt-repository -y ppa:team-xbmc/xbmc-ppa-build-depends &&
#      sudo add-apt-repository -y ppa:wsnipex/vaapi &&
#      sudo add-apt-repository -y ppa:george-edison55/cmake-3.x &&
#      sudo add-apt-repository -y ppa:pulse-eight/libcec &&
#      sudo apt-get update -qq;
#    fi

# Install dependencies
#
# Install any prerequisites or dependencies necessary to run our builds
#
#install:

# Linux dependencies
#
#  - if [[ "$TRAVIS_OS_NAME" == "linux" && "$BUILD" == "Kodi" ]]; then
#      sudo apt-get install -qq automake autopoint build-essential cmake curl default-jre gawk gdb gdc
#      gettext git-core gperf libasound2-dev libass-dev libbz2-dev libcap-dev libcdio-dev libcec4-dev libcrossguid-dev libcurl3
#      libcurl4-openssl-dev libdbus-1-dev libfmt3-dev libfontconfig-dev libegl1-mesa-dev libfreetype6-dev libfribidi-dev libgif-dev
#      libiso9660-dev libjpeg-dev liblcms2-dev libltdl-dev liblzo2-dev libmicrohttpd-dev libmysqlclient-dev libnfs-dev
#      libpcre3-dev libplist-dev libpng-dev libpulse-dev libsmbclient-dev libsqlite3-dev libssh-dev
#      libssl-dev libtag1-dev libtinyxml-dev libtool libudev-dev libusb-dev libva-dev libvdpau-dev
#      libxml2-dev libxmu-dev libxrandr-dev libxrender-dev libxslt1-dev libxt-dev libyajl-dev mesa-utils
#      nasm pmount python-dev python-imaging python-sqlite rapidjson-dev swig unzip uuid-dev yasm zip zlib1g-dev;
#    fi

# Prepare builds
#
#before_script:

# Linux
#
#  - if [[ "$TRAVIS_OS_NAME" == "linux" && "$BUILD" == "Kodi" ]]; then
#      ulimit -c unlimited -S;
#      mkdir $TRAVIS_BUILD_DIR/build &&
#      cd $TRAVIS_BUILD_DIR/build;
#    fi
#  - if [[ "$TRAVIS_OS_NAME" == "linux" && "$BUILD" == "Kodi" && "$CXX" == "g++" ]]; then
#      cmake -DCMAKE_BUILD_TYPE=Debug ..;
#    fi
#  - if [[ "$TRAVIS_OS_NAME" == "linux" && "$BUILD" == "Kodi" && "$CXX" == "clang++" ]]; then
#      cmake -DCMAKE_CXX_FLAGS="-Qunused-arguments" ..;
#    fi
#  - if [[ "$BUILD" != "Kodi" ]] && [[ "$ADDONS" == "adsp" || "$ADDONS" == "audiodecoder" || "$ADDONS" == "audioencoder" ||
#          "$ADDONS" == "pvr" || "$ADDONS" == "screensaver" || "$ADDONS" == "visualization" ]]; then
#      cd $TRAVIS_BUILD_DIR/cmake/addons &&
#      mkdir -p build &&
#      cd build/ &&
#      cmake ../bootstrap -DCMAKE_BUILD_TYPE=Debug &&
#      make -j4;
#    fi

# Actually build
#
#script:
#  - if [[ "$BUILD" == "Kodi" ]]; then
#      make -j4 &&
#      make check;
#    fi
#  - if [[ "$BUILD" != "Kodi" ]] && [[ "$ADDONS" == "adsp" || "$ADDONS" == "audiodecoder" || "$ADDONS" == "audioencoder" ||
#          "$ADDONS" == "pvr" || "$ADDONS" == "screensaver" || "$ADDONS" == "visualization" ]]; then
#      cd $TRAVIS_BUILD_DIR/ &&
#      mkdir -p build &&
#      cmake -DADDONS_TO_BUILD="$ADDONS".* -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../addons $TRAVIS_BUILD_DIR/cmake/addons &&
#      make -j4;
#    fi

#after_failure:
#  - COREFILE=$(find . -maxdepth 1 -name "core*" | head -n 1)
#  - if [[ -f "$COREFILE" ]]; then
#      gdb -c "$COREFILE" kodi-test -ex "thread apply all bt" -ex "set pagination 0" -batch;
#    fi

# Disable annoying emails

#notifications:
#  email: false
